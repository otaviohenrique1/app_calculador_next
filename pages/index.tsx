import { Box, Button, ButtonGroup, TextField } from '@mui/material'
import type { NextPage } from 'next'
import Head from 'next/head'
import CalculateIcon from '@mui/icons-material/Calculate';
import { useFormik } from 'formik';
import { object, string, number } from "yup";
import { FormikHelpers } from 'formik/dist/types';
import { useState } from 'react';
import Calculador from '../utils/utils';

interface DataTypes {
  campoNome: string;
  campoA: number | string;
  campoB: number | string;
  campoC: number | string;
}

const initialValues: DataTypes = {
  campoNome: "",
  campoA: "",
  campoB: "",
  campoC: "",
};

const validationSchema = object().shape({
  campoNome: string()
    .required("Campo vazio"),
  campoA: number()
    .required("Campo vazio")
    .positive("Aceita somente numeros positivos")
    .moreThan(0, "Aceita numeros maiores que 0"),
  campoB: number()
    .required("Campo vazio")
    .positive("Aceita somente numeros positivos")
    .moreThan(0, "Aceita numeros maiores que 0"),
  campoC: number()
    .required("Campo vazio")
    .positive("Aceita somente numeros positivos")
    .moreThan(0, "Aceita numeros maiores que 0"),
});

const Home: NextPage = () => {
  const [data, setData] = useState("0.0");

  const formik = useFormik({
    initialValues,
    validationSchema: validationSchema,
    onSubmit: onSubmitForm
  });

  function onSubmitForm(values: DataTypes, helpers: FormikHelpers<DataTypes>) {
    let resultado = Calculador.CalculaMedida(
      Number(values.campoA),
      Number(values.campoB),
      Number(values.campoC),
    );

    let resultadoExpressao = Calculador.CalculaMedidaExpressao(
      resultado,
      Number(values.campoC),
      String(values.campoNome),
    );

    setData(resultadoExpressao);
  }

  return (
    <Box
      display="flex"
      alignItems="center"
      justifyContent="center"
      width="100%"
      height="100%"
    >
      <Head>
        <title>App Calculador Next</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box
        display="flex"
        // alignItems="center"
        justifyContent="center"
        width="100%"
        height="100%"
        maxHeight="500px"
        maxWidth="500px"
      >
        <Box
          display="flex"
          flexDirection="column"
        >
          <Box
            display="flex"
            flexDirection="row"
            alignItems="center"
            justifyContent="center"
            sx={{
              marginBottom: 3
            }}
          >
            <CalculateIcon sx={{
              width: 50,
              height: 50,
              marginRight: 1
            }} />
            <h1>App Calculador Next</h1>
          </Box>
          <form onSubmit={formik.handleSubmit}>
            <TextField
              fullWidth
              variant="outlined"
              type="text"
              id="campoNome"
              label="Campo Nome"
              placeholder="Nome da medida"
              value={formik.values.campoNome}
              onChange={formik.handleChange}
              error={formik.touched.campoNome && Boolean(formik.errors.campoNome)}
              helperText={formik.touched.campoNome && formik.errors.campoNome}
              sx={{ marginBottom: 2 }}
            />
            <TextField
              fullWidth
              variant="outlined"
              type="number"
              id="campoA"
              label="Campo A"
              placeholder="Valor campo A"
              value={formik.values.campoA}
              onChange={formik.handleChange}
              error={formik.touched.campoA && Boolean(formik.errors.campoA)}
              helperText={formik.touched.campoA && formik.errors.campoA}
              sx={{ marginBottom: 2 }}
            />
            <TextField
              fullWidth
              variant="outlined"
              type="number"
              id="campoB"
              label="Campo B"
              placeholder="Valor campo B"
              value={formik.values.campoB}
              onChange={formik.handleChange}
              error={formik.touched.campoB && Boolean(formik.errors.campoB)}
              helperText={formik.touched.campoB && formik.errors.campoB}
              sx={{ marginBottom: 2 }}
            />
            <TextField
              fullWidth
              variant="outlined"
              type="number"
              id="campoC"
              label="Campo C"
              placeholder="Valor campo C"
              value={formik.values.campoC}
              onChange={formik.handleChange}
              error={formik.touched.campoC && Boolean(formik.errors.campoC)}
              helperText={formik.touched.campoC && formik.errors.campoC}
              sx={{ marginBottom: 3 }}
            />
            <Box
              display="flex"
              flexDirection="column"
              sx={{ marginBottom: 2, }}
            >
              <h2>Resultado</h2>
              <h3>{data}</h3>
            </Box>
            <ButtonGroup
              variant="contained"
              aria-label="outlined primary button group"
              fullWidth
              sx={{
                marginBottom: 2,
              }}
            >
              <Button
                color="primary"
                variant="contained"
                type="submit"
              >
                Calcular
              </Button>
              <Button
                color="error"
                variant="contained"
                type="button"
                onClick={() => {
                  formik.resetForm();
                  setData("0.0");
                }}
              >
                Limpar
              </Button>
              <Button
                color="warning"
                variant="contained"
                type="button"
                onClick={() => {
                  alert(`
                    App calculador
                    a --- c
                    b --- x
                    x=(b*c)/a
                  `);
                }}
              >
                Ajuda
              </Button>
            </ButtonGroup>
          </form>
        </Box>
      </Box>
    </Box>
  )
}

export default Home
